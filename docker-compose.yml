version: '3.8'

services:
  auth-service:
    build: ./backend/auth-service
    ports:
      - "${AUTH_PORT}:5001"
    environment:
      - MONGODB_URI=mongodb://mongo-auth:${MONGO_AUTH_PORT}/authdb
    depends_on:
      - mongo-auth

  mongo-auth:
    image: mongo:latest
    ports:
      - "${MONGO_AUTH_PORT}:27018"
    volumes:
      - mongo-data2:/data/db

  finance-services:
    build: ./backend/finance-services
    volumes:
      - ./backend/finance-services:/app
    ports:
      - "${FINANCE_PORT}:5002"
    env_file:
      - ./backend/finance-services/.env
    depends_on:
      - mysql-finance

  mysql-finance:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/finance-services/init.sql:/docker-entrypoint-initdb.d/init.sql

  mysqlFinance-exporter:
    image: prom/mysqld-exporter
    volumes:
      - ./backend/monitoring-service/mysql-exporter/configFinance.my-cnf:/cfg/config.my-cnf
    command:
      - '--config.my-cnf=/cfg/config.my-cnf'
    ports:
      - "9104:9104"

  project-service:
    build:
      context: ./backend/project-service/app
    ports:
      - "${PROJECT_PORT}:5003"
    depends_on:
      - postgres-project
    env_file:
      - ./backend/project-service/.env

  postgres-project:
    build:
      context: ./backend/project-service/db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5433"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-project:${POSTGRES_PORT}/${POSTGRES_DB}
    ports:
      - "9187:9187"

  reports-service:
    build: ./backend/reports-service
    ports:
      - "${REPORTS_PORT}:5004"
    environment:
      - PYTHONUNBUFFERED=1
    env_file:
      - ./backend/reports-service/.env

  socios-service:
    build: ./backend/socios-service
    volumes:
      - ./backend/socios-service/db:/db
    ports:
      - "${SOCIOS_PORT}:3000"

  mongodb-tareas:
    image: mongo:latest
    container_name: mongodb-tareas
    ports:
      - "${MONGO_TAREAS_PORT}:27019"
    volumes:
      - mongo-data1:/data/db

  tareas-service:
    build: ./backend/tareas-service
    container_name: tareas-service
    ports:
      - "${TAREAS_PORT}:3001"
    environment:
      - MONGODB_URI=mongodb://mongodb-tareas:${MONGO_TAREAS_PORT}/tareas
    depends_on:
      - mongodb-tareas

  mongodbTareas-exporter:
    image: percona/mongodb_exporter:0.40
    environment:
      - MONGODB_URI=mongodb://mongodb-tareas:${MONGO_TAREAS_PORT}
    ports:
      - "9216:9216"

  mongodbAuth-exporter:
    image: percona/mongodb_exporter:0.40
    environment:
      - MONGODB_URI=mongodb://mongo-auth:${MONGO_AUTH_PORT}   
    ports:
      - "9218:9218"
    command: ["--web.listen-address=:9218"] 

  votacio-service:
    build: ./backend/votacio-service
    ports:
      - "${VOTACIO_PORT}:5005"
    environment:
      - FLASK_APP=${FLASK_APP}
      - FLASK_ENV=${FLASK_ENV}
    depends_on:
      - mariadb-votacio
    env_file:
      - ./backend/votacio-service/.env

  mariadb-votacio:
    build:
      context: ./backend/votacio-service
      dockerfile: Dockerfile.db
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql

  mysqlVotacio-exporter:
    image: prom/mysqld-exporter
    volumes:
      - ./backend/monitoring-service/mysql-exporter/configVotacio.my-cnf:/cfg/config.my-cnf
    command:
      - '--config.my-cnf=/cfg/config.my-cnf'
      - '--web.listen-address=:9105'
    ports:
      - "9105:9105"


  prometheus:
    image: prom/prometheus:v2.44.0
    volumes:
       - ./backend/monitoring-service/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "9000:9000"
    environment:
      - GF_PATHS_CONFIG=/etc/grafana/ayub.ini
    volumes:
      - ./backend/monitoring-service/grafana/config.ini/:/etc/grafana/ayub.ini
    depends_on:
      - prometheus


  mongo-pisignage:
    image: mongo:4.4
    #restart: unless-stopped
    ports:
      - 27017:27017
    volumes:
      - pimongodb:/data/db
      - pimongodb_config:/data/configdb

  pisignage-service:
    build:  
      context: ./backend/pisignage-service/
    #restart: unless-stopped
    ports:
      - 4000:4000
    volumes:
      - pimedia:/media
      - pidata:/data
    environment:
      - NODE_ENV=production
      - PORT=4000
    depends_on:
      - mongo-pisignage

volumes:
  pimongodb:
  pimongodb_config:
  pimedia:
  pidata:
  mongo-data1:
  mongo-data2:
  mysql_data:
  postgres_data:
  sqlite_data:
  db_data:
